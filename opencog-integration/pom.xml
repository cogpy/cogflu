<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>software.uncharted.influent</groupId>
        <artifactId>influent</artifactId>
        <version>2.0.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>opencog-integration</artifactId>
    <packaging>jar</packaging>
    <name>OpenCog Integration for Influent</name>
    <description>Integration module providing OpenCog AtomSpace and reasoning capabilities for Influent data flow analytics</description>

    <properties>
        <jython.version>2.7.3</jython.version>
        <py4j.version>0.10.9.9</py4j.version>
        <commons-exec.version>1.3</commons-exec.version>
    </properties>

    <dependencies>
        <!-- Aperture SPI dependency -->
        <dependency>
            <groupId>software.uncharted.influent</groupId>
            <artifactId>aperture-spi</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Aperture Common dependency -->
        <dependency>
            <groupId>software.uncharted.influent</groupId>
            <artifactId>aperture-common</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Python integration dependencies -->
        <dependency>
            <groupId>org.python</groupId>
            <artifactId>jython-standalone</artifactId>
            <version>${jython.version}</version>
        </dependency>

        <dependency>
            <groupId>net.sf.py4j</groupId>
            <artifactId>py4j</artifactId>
            <version>${py4j.version}</version>
        </dependency>

        <!-- Process execution for Python scripts -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>${commons-exec.version}</version>
        </dependency>

        <!-- Guice for dependency injection -->
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>

        <!-- Jackson for JSON processing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- Testing dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Copy Python scripts to target -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-python-scripts</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/python</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/python</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
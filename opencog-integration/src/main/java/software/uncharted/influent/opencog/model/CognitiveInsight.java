package software.uncharted.influent.opencog.model;

import java.util.Objects;

/**
 * Represents a cognitive insight generated by OpenCog reasoning
 */
public class CognitiveInsight {
    
    private final String insightId;
    private final String content;
    private final double confidence;
    private final String source;
    
    public CognitiveInsight(String insightId, String content, double confidence, String source) {
        this.insightId = insightId;
        this.content = content;
        this.confidence = confidence;
        this.source = source;
    }
    
    public CognitiveInsight(String insightId, String atomId) {
        this.insightId = insightId;
        this.content = "Cognitive insight for entity " + insightId;
        this.confidence = 0.8;
        this.source = "AtomSpace: " + atomId;
    }
    
    public String getInsightId() { return insightId; }
    public String getContent() { return content; }
    public double getConfidence() { return confidence; }
    public String getSource() { return source; }
    
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        CognitiveInsight that = (CognitiveInsight) o;
        return Double.compare(that.confidence, confidence) == 0 &&
               Objects.equals(insightId, that.insightId) &&
               Objects.equals(content, that.content) &&
               Objects.equals(source, that.source);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(insightId, content, confidence, source);
    }
}